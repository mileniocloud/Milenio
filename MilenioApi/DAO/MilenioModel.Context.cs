

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace MilenioApi.DAO
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class MilenioCloudEntities : DbContext
{
    public MilenioCloudEntities()
        : base("name=MilenioCloudEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<Articulo> Articulo { get; set; }

    public virtual DbSet<Aula> Aula { get; set; }

    public virtual DbSet<Categoria> Categoria { get; set; }

    public virtual DbSet<Curso> Curso { get; set; }

    public virtual DbSet<Departamento> Departamento { get; set; }

    public virtual DbSet<Entidad> Entidad { get; set; }

    public virtual DbSet<Entidad_Persona_Rol> Entidad_Persona_Rol { get; set; }

    public virtual DbSet<GenericError> GenericError { get; set; }

    public virtual DbSet<Imagen> Imagen { get; set; }

    public virtual DbSet<Licencia> Licencia { get; set; }

    public virtual DbSet<Municipio> Municipio { get; set; }

    public virtual DbSet<Persona> Persona { get; set; }

    public virtual DbSet<Poblado> Poblado { get; set; }

    public virtual DbSet<Rol> Rol { get; set; }

    public virtual DbSet<Subcategoria> Subcategoria { get; set; }

    public virtual DbSet<Telefono> Telefono { get; set; }

    public virtual DbSet<TipoIdentificacion> TipoIdentificacion { get; set; }

    public virtual DbSet<Ubicacion> Ubicacion { get; set; }


    public virtual ObjectResult<string> sp_create_user(string email, string password)
    {

        var emailParameter = email != null ?
            new ObjectParameter("email", email) :
            new ObjectParameter("email", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_create_user", emailParameter, passwordParameter);
    }


    public virtual ObjectResult<string> sp_create_entidad(Nullable<int> nit, string nombre, Nullable<int> codigoEntidad, Nullable<int> codigodane, Nullable<System.DateTime> finiFiscal, Nullable<System.DateTime> ffinFiscal, Nullable<System.Guid> entidad_Padre, Nullable<int> poblado_Id, string direccion, string latitud, string longitud, string file)
    {

        var nitParameter = nit.HasValue ?
            new ObjectParameter("Nit", nit) :
            new ObjectParameter("Nit", typeof(int));


        var nombreParameter = nombre != null ?
            new ObjectParameter("Nombre", nombre) :
            new ObjectParameter("Nombre", typeof(string));


        var codigoEntidadParameter = codigoEntidad.HasValue ?
            new ObjectParameter("CodigoEntidad", codigoEntidad) :
            new ObjectParameter("CodigoEntidad", typeof(int));


        var codigodaneParameter = codigodane.HasValue ?
            new ObjectParameter("codigodane", codigodane) :
            new ObjectParameter("codigodane", typeof(int));


        var finiFiscalParameter = finiFiscal.HasValue ?
            new ObjectParameter("FiniFiscal", finiFiscal) :
            new ObjectParameter("FiniFiscal", typeof(System.DateTime));


        var ffinFiscalParameter = ffinFiscal.HasValue ?
            new ObjectParameter("FfinFiscal", ffinFiscal) :
            new ObjectParameter("FfinFiscal", typeof(System.DateTime));


        var entidad_PadreParameter = entidad_Padre.HasValue ?
            new ObjectParameter("Entidad_Padre", entidad_Padre) :
            new ObjectParameter("Entidad_Padre", typeof(System.Guid));


        var poblado_IdParameter = poblado_Id.HasValue ?
            new ObjectParameter("Poblado_Id", poblado_Id) :
            new ObjectParameter("Poblado_Id", typeof(int));


        var direccionParameter = direccion != null ?
            new ObjectParameter("Direccion", direccion) :
            new ObjectParameter("Direccion", typeof(string));


        var latitudParameter = latitud != null ?
            new ObjectParameter("Latitud", latitud) :
            new ObjectParameter("Latitud", typeof(string));


        var longitudParameter = longitud != null ?
            new ObjectParameter("Longitud", longitud) :
            new ObjectParameter("Longitud", typeof(string));


        var fileParameter = file != null ?
            new ObjectParameter("File", file) :
            new ObjectParameter("File", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_create_entidad", nitParameter, nombreParameter, codigoEntidadParameter, codigodaneParameter, finiFiscalParameter, ffinFiscalParameter, entidad_PadreParameter, poblado_IdParameter, direccionParameter, latitudParameter, longitudParameter, fileParameter);
    }


    public virtual ObjectResult<string> sp_create_persona(Nullable<int> numeroIdentificacion, string nombres, string apellidos, string sexo, Nullable<System.DateTime> fNacimiento, string nacionalidad, string libretaMilitar, string tipoSangre, string foto, Nullable<System.Guid> tipoIdentificacion_Id, Nullable<int> poblado_Id, string direccion, string latitud, string longitud)
    {

        var numeroIdentificacionParameter = numeroIdentificacion.HasValue ?
            new ObjectParameter("NumeroIdentificacion", numeroIdentificacion) :
            new ObjectParameter("NumeroIdentificacion", typeof(int));


        var nombresParameter = nombres != null ?
            new ObjectParameter("Nombres", nombres) :
            new ObjectParameter("Nombres", typeof(string));


        var apellidosParameter = apellidos != null ?
            new ObjectParameter("Apellidos", apellidos) :
            new ObjectParameter("Apellidos", typeof(string));


        var sexoParameter = sexo != null ?
            new ObjectParameter("Sexo", sexo) :
            new ObjectParameter("Sexo", typeof(string));


        var fNacimientoParameter = fNacimiento.HasValue ?
            new ObjectParameter("FNacimiento", fNacimiento) :
            new ObjectParameter("FNacimiento", typeof(System.DateTime));


        var nacionalidadParameter = nacionalidad != null ?
            new ObjectParameter("Nacionalidad", nacionalidad) :
            new ObjectParameter("Nacionalidad", typeof(string));


        var libretaMilitarParameter = libretaMilitar != null ?
            new ObjectParameter("LibretaMilitar", libretaMilitar) :
            new ObjectParameter("LibretaMilitar", typeof(string));


        var tipoSangreParameter = tipoSangre != null ?
            new ObjectParameter("TipoSangre", tipoSangre) :
            new ObjectParameter("TipoSangre", typeof(string));


        var fotoParameter = foto != null ?
            new ObjectParameter("Foto", foto) :
            new ObjectParameter("Foto", typeof(string));


        var tipoIdentificacion_IdParameter = tipoIdentificacion_Id.HasValue ?
            new ObjectParameter("TipoIdentificacion_Id", tipoIdentificacion_Id) :
            new ObjectParameter("TipoIdentificacion_Id", typeof(System.Guid));


        var poblado_IdParameter = poblado_Id.HasValue ?
            new ObjectParameter("Poblado_Id", poblado_Id) :
            new ObjectParameter("Poblado_Id", typeof(int));


        var direccionParameter = direccion != null ?
            new ObjectParameter("Direccion", direccion) :
            new ObjectParameter("Direccion", typeof(string));


        var latitudParameter = latitud != null ?
            new ObjectParameter("Latitud", latitud) :
            new ObjectParameter("Latitud", typeof(string));


        var longitudParameter = longitud != null ?
            new ObjectParameter("Longitud", longitud) :
            new ObjectParameter("Longitud", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_create_persona", numeroIdentificacionParameter, nombresParameter, apellidosParameter, sexoParameter, fNacimientoParameter, nacionalidadParameter, libretaMilitarParameter, tipoSangreParameter, fotoParameter, tipoIdentificacion_IdParameter, poblado_IdParameter, direccionParameter, latitudParameter, longitudParameter);
    }

}

}

